// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(uuid())
  name         String
  email        String       @unique
  password     String
  role         UserRole     @default(user)
  profilePhoto String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt()
  enrollments  Enrollment[]

  @@map("users")
}

model Course {
  id                      String      @id @default(uuid())
  title                   String
  categoryId              String
  category                Category    @relation(fields: [categoryId], references: [id])
  level                   CourseLevel @default(begginer)
  popularity              Int
  totalEnrollStudentCount Int         @default(0)
  description             String?
  instructor              String?
  duration                Int?
  price                   Float?
  imageUrl                String?

  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  enrollments Enrollment[]

  @@unique([title, categoryId, level])
  @@map("courses")
}

model Enrollment {
  id       String @id @default(uuid())
  userId   String
  user     User   @relation(fields: [userId], references: [id])
  courseId String
  course   Course @relation(fields: [courseId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, courseId])
  @@map("enrollments")
}

model Category {
  id    String @id @default(uuid())
  title String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  courses   Course[]

  @@map("categories")
}

enum UserRole {
  user
  super_admin
}

enum CourseLevel {
  begginer
  intermediate
  advanced
}
